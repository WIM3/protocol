{
  "id": "a4acb02e49735eb0fe514f7a693d1980",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.6.9",
  "solcLongVersion": "0.6.9+commit.3e3065ac",
  "input": {
    "language": "Solidity",
    "sources": {
      "contracts/mock/mocks/IfnxTokenMock.sol": {
        "content": "// SPDX-License-Identifier: GPL-3.0-or-later\npragma solidity 0.6.9;\npragma experimental ABIEncoderV2;\n\ncontract IfnxTokenMock {\n    uint256 public totalSupply;\n\n    function setTotalSupply(uint256 _totalSupply) public {\n        totalSupply = _totalSupply;\n    }\n}\n"
      }
    },
    "settings": {
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers",
            "metadata",
            "devdoc",
            "userdoc",
            "storageLayout",
            "evm.gasEstimates"
          ],
          "": [
            "ast"
          ]
        }
      },
      "metadata": {
        "useLiteralContent": true
      }
    }
  },
  "output": {
    "contracts": {
      "contracts/mock/mocks/IfnxTokenMock.sol": {
        "IfnxTokenMock": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_totalSupply",
                  "type": "uint256"
                }
              ],
              "name": "setTotalSupply",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "devdoc": {
            "methods": {}
          },
          "evm": {
            "bytecode": {
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b5060c38061001f6000396000f3fe6080604052348015600f57600080fd5b506004361060325760003560e01c806318160ddd146037578063f7ea7a3d146051575b600080fd5b603d6062565b604051604891906084565b60405180910390f35b6060605c366004606d565b6068565b005b60005481565b600055565b600060208284031215607d578081fd5b5035919050565b9081526020019056fea2646970667358221220cc0fef5b9f2dd0e640fb644c4c571809a192aa16db142ba4a2536cbe4aae61e064736f6c63430006090033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xC3 DUP1 PUSH2 0x1F PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x32 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x18160DDD EQ PUSH1 0x37 JUMPI DUP1 PUSH4 0xF7EA7A3D EQ PUSH1 0x51 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3D PUSH1 0x62 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x48 SWAP2 SWAP1 PUSH1 0x84 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x5C CALLDATASIZE PUSH1 0x4 PUSH1 0x6D JUMP JUMPDEST PUSH1 0x68 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH1 0x7D JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCC 0xF 0xEF JUMPDEST SWAP16 0x2D 0xD0 0xE6 BLOCKHASH 0xFB PUSH5 0x4C4C571809 LOG1 SWAP3 0xAA AND 0xDB EQ 0x2B LOG4 LOG2 MSTORE8 PUSH13 0xBE4AAE61E064736F6C63430006 MULMOD STOP CALLER ",
              "sourceMap": "103:160:0:-:0;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "immutableReferences": {},
              "linkReferences": {},
              "object": "6080604052348015600f57600080fd5b506004361060325760003560e01c806318160ddd146037578063f7ea7a3d146051575b600080fd5b603d6062565b604051604891906084565b60405180910390f35b6060605c366004606d565b6068565b005b60005481565b600055565b600060208284031215607d578081fd5b5035919050565b9081526020019056fea2646970667358221220cc0fef5b9f2dd0e640fb644c4c571809a192aa16db142ba4a2536cbe4aae61e064736f6c63430006090033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x32 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x18160DDD EQ PUSH1 0x37 JUMPI DUP1 PUSH4 0xF7EA7A3D EQ PUSH1 0x51 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3D PUSH1 0x62 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x48 SWAP2 SWAP1 PUSH1 0x84 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x5C CALLDATASIZE PUSH1 0x4 PUSH1 0x6D JUMP JUMPDEST PUSH1 0x68 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH1 0x7D JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCC 0xF 0xEF JUMPDEST SWAP16 0x2D 0xD0 0xE6 BLOCKHASH 0xFB PUSH5 0x4C4C571809 LOG1 SWAP3 0xAA AND 0xDB EQ 0x2B LOG4 LOG2 MSTORE8 PUSH13 0xBE4AAE61E064736F6C63430006 MULMOD STOP CALLER ",
              "sourceMap": "103:160:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;132:26;;;:::i;:::-;;;;;;;;;;;;;;;;165:96;;;;;;;;;:::i;:::-;;132:26;;;;:::o;165:96::-;228:11;:26;165:96::o;142:241:-1:-;;246:2;234:9;225:7;221:23;217:32;214:2;;;-1:-1;;252:12;214:2;-1:-1;72:20;;208:175;-1:-1;208:175;510:222;461:37;;;637:2;622:18;;608:124"
            },
            "gasEstimates": {
              "creation": {
                "codeDepositCost": "39000",
                "executionCost": "93",
                "totalCost": "39093"
              },
              "external": {
                "setTotalSupply(uint256)": "20224",
                "totalSupply()": "1006"
              }
            },
            "methodIdentifiers": {
              "setTotalSupply(uint256)": "f7ea7a3d",
              "totalSupply()": "18160ddd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.6.9+commit.3e3065ac\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_totalSupply\",\"type\":\"uint256\"}],\"name\":\"setTotalSupply\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/mock/mocks/IfnxTokenMock.sol\":\"IfnxTokenMock\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/mock/mocks/IfnxTokenMock.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-or-later\\npragma solidity 0.6.9;\\npragma experimental ABIEncoderV2;\\n\\ncontract IfnxTokenMock {\\n    uint256 public totalSupply;\\n\\n    function setTotalSupply(uint256 _totalSupply) public {\\n        totalSupply = _totalSupply;\\n    }\\n}\\n\",\"keccak256\":\"0x1f817d9a6961c33458cc5a385c07f05bf56ddd9bdbcaab44333b9f2d39a2cb32\",\"license\":\"GPL-3.0-or-later\"}},\"version\":1}",
          "storageLayout": {
            "storage": [
              {
                "astId": 4,
                "contract": "contracts/mock/mocks/IfnxTokenMock.sol:IfnxTokenMock",
                "label": "totalSupply",
                "offset": 0,
                "slot": "0",
                "type": "t_uint256"
              }
            ],
            "types": {
              "t_uint256": {
                "encoding": "inplace",
                "label": "uint256",
                "numberOfBytes": "32"
              }
            }
          },
          "userdoc": {
            "methods": {}
          }
        }
      }
    },
    "sources": {
      "contracts/mock/mocks/IfnxTokenMock.sol": {
        "ast": {
          "absolutePath": "contracts/mock/mocks/IfnxTokenMock.sol",
          "exportedSymbols": {
            "IfnxTokenMock": [
              15
            ]
          },
          "id": 16,
          "license": "GPL-3.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                "0.6",
                ".9"
              ],
              "nodeType": "PragmaDirective",
              "src": "45:22:0"
            },
            {
              "id": 2,
              "literals": [
                "experimental",
                "ABIEncoderV2"
              ],
              "nodeType": "PragmaDirective",
              "src": "68:33:0"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": null,
              "fullyImplemented": true,
              "id": 15,
              "linearizedBaseContracts": [
                15
              ],
              "name": "IfnxTokenMock",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "functionSelector": "18160ddd",
                  "id": 4,
                  "mutability": "mutable",
                  "name": "totalSupply",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 15,
                  "src": "132:26:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "132:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 13,
                    "nodeType": "Block",
                    "src": "218:43:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 11,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 9,
                            "name": "totalSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4,
                            "src": "228:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 10,
                            "name": "_totalSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6,
                            "src": "242:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "228:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 12,
                        "nodeType": "ExpressionStatement",
                        "src": "228:26:0"
                      }
                    ]
                  },
                  "documentation": null,
                  "functionSelector": "f7ea7a3d",
                  "id": 14,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "setTotalSupply",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 7,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 6,
                        "mutability": "mutable",
                        "name": "_totalSupply",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 14,
                        "src": "189:20:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 5,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "189:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "188:22:0"
                  },
                  "returnParameters": {
                    "id": 8,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "218:0:0"
                  },
                  "scope": 15,
                  "src": "165:96:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                }
              ],
              "scope": 16,
              "src": "103:160:0"
            }
          ],
          "src": "45:219:0"
        },
        "id": 0
      }
    }
  }
}
